

@Html.AntiForgeryToken()
@{ 
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <head>
        <title>Funcionários</title>
        <link rel="stylesheet" href="~/Content/Modal-style.css" type="text/css" />
        <link href="~/DataTables/datatables.min.css" rel="stylesheet" />
    </head>
<body>

    <h2>Lista de funcionários</h2>
    <p style="text-align: center">
      <button class="btn btn-outline-dark" onclick="location.href='@Url.Action("Create", "Employee")'">Novo funcionário</button>  
    </p>

    <table id="myTable" class="table table-bordered alert-dark">

        <thead>
            <tr>
                <th>Nome</th>
                <th>Sobrenome</th>
                <th>Email</th>
                <th>Departamento</th>
                <th>Ações</th>
            </tr>
        </thead>
    </table>

    <input type="hidden" id="hiddenEmployeeId" />


    <!--Modal to Delete-->
    <div class="popup_background" id="popupDelete">
        <div class="popup_DeleteFormat">
            <div class="popup popup_DeleteFormat">
                <h4><strong>Deseja deletar este funcionário?</strong></h4>
                <button href="#" onclick="DeleteEmp()">Deletar</button>
                <button href="#" onclick="location.href='@Url.Action("Index", "Employee")'">Cancelar</button>
            </div>

        </div>
    </div>

    <!--Modal to Edit-->
    <div class="popup_background" id="popupEdit">
        <div class="popup">
            <form method="post" id="EmployeeData">
                <div class="popup popup-content">
                    <h4><strong>Editar Funcionário</strong></h4>
                    <label for="id">ID</label>
                    <input id="id" name="EmployeeId"/>

                    <label for="nome">Nome</label>
                    <input id="nome" name="EmployeeFirstName" />

                    <label for="sobrenome">Sobrenome</label>
                    <input id="sobrenome" name="EmployeeLastName" />

                    <label for="email">Email</label>
                    <input id="email" name="EmployeeEmail" />

                    <label for="departmentId">Departamento</label>
                    <select id="departmentId" name="DepartmentId">
                        <option value="1">Administrativo</option>
                        <option value="2">TI</option>
                        <option value="3">RH</option>
                        <option value="4">Financeiro</option>
                    </select>
                </div>

                <button class="btn-default" type="submit" onclick="Update()">Atualizar</button>
            </form>
        </div>
    </div>

    @section scripts {
        
        <script src="~/DataTables/datatables.min.js"></script>
        <link href="~/DataTables/datatables.min.css" rel="stylesheet" />
        <script type="text/javascript" src="../../Scripts/Employee.js"></script>
        <script>
            $(document).ready(function () {
                var table = $('#myTable').DataTable({
                    "language": {
                        "lengthMenu": "Exibe _MENU_ Registros por página",
                        "search": "Procurar",
                        "paginate": { "previous": "Retornar", "next": "Avançar" },
                        "zeroRecords": "Nada foi encontrado",
                        "info": "Exibindo página _PAGE_ de _PAGES_",
                        "infoEmpty": "Sem registros",
                        "infoFiltered": "(filtrado de _MAX_ regitros totais)"
                    },
                    "processing": true,
                    "filter": true,
                    "lengthMenu": [[3, 5, 10, 25, 50, -1], [3, 5, 10, 25, 50, "Todos"]],
                    "pageLength": 10,

                    "ajax": {
                        "type": "GET",
                        "url": "/Employee/GetEmployee",
                        "dataType": "json"
                    },
                    columns: [
                        { "data": "EmployeeFirstName", "title": "Nome", "autowidth": true },
                        { "data": "EmployeeLastName", "title": "Sobrenome", "autowidth": true },
                        { "data": "EmployeeEmail", "title": "Email", "autowidth": true },
                        {
                            "data": "DepartmentId", "title": "Departamento", "autowidth": true,
                            render: function (data, type, row) {
                                if (row.DepartmentId === 1) {
                                    return "<tr>Administrativo</tr>"
                                }

                                else if (row.DepartmentId === 2) {
                                    return "<tr>TI</tr>"
                                }

                                 else if (row.DepartmentId === 3) {
                                    return "<tr>RH</tr>"
                                }

                                 else if (row.DepartmentId === 4) {
                                    return "<tr>Financeiro</tr>"
                                }
                            }
                                
                        },
                        {
                            render: function (data, type, row) {
                                return "<a  href='#' class=actions onclick=ConfirmDelete('" + row.EmployeeId + "')>Deletar</a>   <a href='#' onclick=EditEmployee('" + row.EmployeeId + "')>Editar</a>";
                            }
                        }      
                    ]


                });
                
         
            } );


           
        </script>
    }


    <script type="text/javascript" src="../../Scripts/Employee.js"></script>

</body>